# https://regex101.com/r/aGn8QC/2
# •	Найдите все натуральные числа (возможно, окружённые буквами);
# •	Найдите все «слова», написанные капсом (то есть строго заглавными), возможно внутри настоящих слов (аааБББввв);
# •	Найдите слова, в которых есть русская буква, а за ней цифра;
# •	Найдите все слова, начинающиеся с русской или латинской большой буквы (\b — граница слова);
# •	Найдите слова, которые начинаются на гласную (\b — граница слова);
# •	Найдите все натуральные числа, не находящиеся на границе слова;
# •	Найдите строчки, в которых есть символ * (. — это точно не конец строки!);
# •	Найдите строчки, в которых есть открывающая и когда-нибудь потом закрывающая скобки;
# •	Выделите одним махом весь кусок оглавления (в конце примера, вместе с тегами);
# •	Выделите одним махом только текстовую часть оглавления, без тегов;
# •	Найдите пустые строчки;
# •	Найти все теги, не включая их содержимое.
import re
regex_list = [
    r'\b\d+\b',
    r'\b[А-ЯA-Z]+\b',
    r'\b\w*[А-Яа-я]\d\w*\b',
    r'\b[А-ЯA-Z]\w*\b',
    r'\b[АЕЁИОУЫЭЮЯAEIOUY]\w*\b',
    r'\B\d+\B',
    r'.*\*.*',
    r'.*\(.*\).*',
    r'<a\s.*?<\/a>',
    r'(?<=\>).*?(?=\<)',
    r'^\s*$',
    r'<[^>]+>'
]

test_str = ("Регулярные выражения представляют собой похожий, но гораздо более сильный инструмент \n"
 "для поиска строк, проверки их на соответствие какому-либо шаблону и другой подобной \n"
 "работы. Англоязычное название этого инструмента — Regular Expressions или просто RegExp. \n"
 "Строго говоря, регулярные выражения — специальный язык для описания шаблонов строк.\n\n"
 "АААА аааа АаАаАаАа 123 123 12345 11223344\n"
 "А1Б2В3 АА11 ББ22ВВ 33ГГ44\n\n"
 "Тест!    Ещё!   Даёшь!   ЁЁЁёёё\n\n"
 "QwertyЙцукен\n\n"
 "+-,/[](), * (*), a*(b+[c+d])*e/f+g-h\n\n"
 "!!\"\"\"####$$$$$%%%%%&&&'''(((())***++++,,,,,-----..//:::;;;;<<<<<===>>>????\n"
 "@@@@@[[[[\\\\\\]]]]]^^^__`````{{{{|||||}}}}}~~~~~\n\n"
 "<a href=\"#10\">10: CamelCase -> under_score</a>;\n"
 "<a href=\"#11\">11: Удаление повторов</a>;\n"
 "<a href=\"#12\">12: Близкие слова</a>;\n"
 "<a href=\"#13\">13: Форматирование больших чисел</a>;\n"
 "<a href=\"#14\">14: Разделить текст на предложения</a>;\n"
 "<a href=\"#15\">15: Форматирование номера телефона</a>;\n"
 "<a href=\"#16\">16: Поиск e-mail'ов — 2</a>;\n")

for regex in regex_list:
    matches = re.finditer(regex, test_str)
    
    print("Results for regex: {}".format(regex))
    for matchNum, match in enumerate(matches, start=1):
        print ("Match {matchNum} was found at {start}-{end}: {match}".format(matchNum=matchNum, start=match.start(), end=match.end(), match=match.group()))
